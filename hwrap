#!/usr/bin/env python
"""
hwrap  [pipeline command to wrap]

Assume stdin has a header and the rest are rows.
Print header, then pass on only the rows to wrapped command's stdin.
Useful for "sort", "grep", "head", "tail"
and other commands that don't muck with rows' internal structure.
If you want to wrap a command requiring shell metacharacters -- like pipe |'s
then try: hwrap bash -c "bla | bla | bla"
"""

import sys,os
if sys.stdin.isatty():
  print>>sys.stderr, __doc__.strip()
  sys.exit(1)
sys.stdin = open('/dev/stdin','U',buffering=0)
sys.stdout = open('/dev/stdout','w',buffering=0)
header = sys.stdin.readline()
print header[:-1]
args = sys.argv[1:]
os.execvp( args[0], args )
#os.execvp("ls", ["--color","/"])
