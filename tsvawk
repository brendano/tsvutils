#!/usr/bin/env python
"""
Wrapper around tabawk, letting you use column names instead of positions.  It
makes column names from the header into awk global variables that are integers
for positions, so you can do things like

tsvawk '{print $id,$name}'
tsvawk '$count >= 5'

Your awk script will *not* see the header line from the file; this script absorbs it.

  -r: repeat the header on output too.  (Only good for "print $0" sorts of scripts.)
"""

import sys,os
if sys.stdin.isatty():
  print>>sys.stderr, __doc__.strip()
  sys.exit(1)
sys.stdin = open('/dev/stdin','U',buffering=0)
sys.stdout = open('/dev/stdout','w',buffering=0)
header = sys.stdin.readline()
colnames = header[:-1].split("\t")
flags = []
for i,colname in enumerate(colnames):
  colname = colname.strip()
  if not colname: continue
  flags += ["-v", "%s=%s" % (colname, i+1)]

if '-r' in sys.argv:
  print header[:-1]
  sys.argv.pop(sys.argv.index('-r'))
#print flags
args = ["tabawk"] + flags + sys.argv[1:]
os.execvp( "tabawk", args )
