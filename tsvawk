#!/usr/bin/env python
"""
Wrapper around tabawk, letting you use column names instead of positions.  It
makes column names from the header into awk global variables that are integers
for positions, so you can do things like

tsvawk '{print $id,$name}'
tsvawk '$count >= 5'

Your awk script will *not* see the header line from the file; this script absorbs it.

The consequence is that the output doesn't get a header; you could always do
echo c1 c2 | ssv2tsv  to get it yourself, perhaps.
"""

import sys,os
if sys.stdin.isatty():
  print>>sys.stderr, __doc__.strip()
  sys.exit(1)
sys.stdin = open('/dev/stdin','U',buffering=0)
sys.stdout = open('/dev/stdout','w',buffering=0)
header = sys.stdin.readline()
colnames = header[:-1].split("\t")
flags = []
for i,colname in enumerate(colnames):
  flags += ["-v", "%s=%s" % (colname, i+1)]

#print flags
args = ["tabawk"] + flags + sys.argv[1:]
os.execvp( "tabawk", args )
